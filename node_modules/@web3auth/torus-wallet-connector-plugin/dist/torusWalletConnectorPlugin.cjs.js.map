{"version":3,"file":"torusWalletConnectorPlugin.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-wallet-connector-plugin/webpack/bootstrap","webpack://@web3auth/torus-wallet-connector-plugin/webpack/runtime/compat get default export","webpack://@web3auth/torus-wallet-connector-plugin/webpack/runtime/define property getters","webpack://@web3auth/torus-wallet-connector-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-wallet-connector-plugin/webpack/runtime/make namespace object","webpack://@web3auth/torus-wallet-connector-plugin/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-wallet-connector-plugin/external commonjs2 \"@toruslabs/torus-embed\"","webpack://@web3auth/torus-wallet-connector-plugin/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-wallet-connector-plugin/external commonjs2 \"@web3auth/base-plugin\"","webpack://@web3auth/torus-wallet-connector-plugin/external commonjs2 \"loglevel\"","webpack://@web3auth/torus-wallet-connector-plugin/./src/errors.ts","webpack://@web3auth/torus-wallet-connector-plugin/./src/plugin.ts","webpack://@web3auth/torus-wallet-connector-plugin/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-plugin\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import { ErrorCodes, IWeb3AuthError, Web3AuthError } from \"@web3auth/base\";\n\nexport class TorusWalletPluginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5210: \"Torus Wallet Plugin is not initialized\",\n    5211: \"Web3Auth is connected to unsupported adapter. Torus wallet connector plugin requires web3auth connected to openlogin adapter.\",\n    5212: \"Provider is required..\",\n    5213: \"Web3Auth instance is required while initialization.\",\n    5214: \"Web3Auth is not connected.\",\n    5215: \"UserInfo is required.\",\n    5216: \"Plugin is already initialized\",\n    5217: \"Torus wallet instance is not set.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"TorusWalletPluginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new TorusWalletPluginError(code, `${TorusWalletPluginError.messages[code]}${extraMessage}`);\n  }\n\n  public static notInitialized(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5210, extraMessage);\n  }\n\n  public static unsupportedAdapter(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5211, extraMessage);\n  }\n\n  public static providerRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5212, extraMessage);\n  }\n\n  public static web3authRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5213, extraMessage);\n  }\n\n  public static web3AuthNotConnected(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5214, extraMessage);\n  }\n\n  public static userInfoRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5215, extraMessage);\n  }\n\n  public static alreadyInitialized(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5216, extraMessage);\n  }\n\n  public static torusWalletNotSet(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5217, extraMessage);\n  }\n}\n","import TorusEmbed, { LOGIN_TYPE, PAYMENT_PROVIDER_TYPE, PaymentParams, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport { ADAPTER_EVENTS, ADAPTER_STATUS, CustomChainConfig, SafeEventEmitterProvider, UserInfo, WALLET_ADAPTERS } from \"@web3auth/base\";\nimport { IPlugin, PLUGIN_NAMESPACES } from \"@web3auth/base-plugin\";\nimport type { Web3AuthNoModal } from \"@web3auth/no-modal\";\nimport type { EthereumRpcError } from \"eth-rpc-errors\";\nimport log from \"loglevel\";\n\nimport { TorusWalletPluginError } from \"./errors\";\n\nexport type ProviderInfo = {\n  provider?: SafeEventEmitterProvider;\n  userInfo?: Omit<UserInfo, \"isNewUser\">;\n};\n\nexport class TorusWalletConnectorPlugin implements IPlugin {\n  name = \"TORUS_WALLET_CONNECTOR_PLUGIN\";\n\n  readonly SUPPORTED_ADAPTERS = [WALLET_ADAPTERS.OPENLOGIN];\n\n  readonly pluginNamespace = PLUGIN_NAMESPACES.EIP155;\n\n  public torusWalletInstance: TorusEmbed;\n\n  private provider: SafeEventEmitterProvider | null = null;\n\n  private web3auth: Web3AuthNoModal | null = null;\n\n  private userInfo: UserInfo | null = null;\n\n  private isInitialized = false;\n\n  private walletInitOptions: TorusParams | null = null;\n\n  constructor(options: { torusWalletOpts?: TorusCtorArgs; walletInitOptions: Partial<TorusParams> & Required<Pick<TorusParams, \"whiteLabel\">> }) {\n    const { torusWalletOpts = {}, walletInitOptions } = options;\n    const whiteLabel = walletInitOptions?.whiteLabel;\n\n    if (!whiteLabel) throw new Error(\"whiteLabel is required\");\n    const { logoDark, logoLight } = whiteLabel;\n    if (!logoDark || !logoLight) throw new Error(\"logoDark and logoLight are required in whiteLabel config\");\n\n    this.torusWalletInstance = new TorusEmbed(torusWalletOpts);\n    this.walletInitOptions = walletInitOptions;\n  }\n\n  get proxyProvider(): SafeEventEmitterProvider | null {\n    return this.torusWalletInstance.isLoggedIn ? (this.torusWalletInstance.provider as unknown as SafeEventEmitterProvider) : null;\n  }\n\n  async initWithWeb3Auth(web3auth: Web3AuthNoModal): Promise<void> {\n    if (this.isInitialized) return;\n    if (!web3auth) throw TorusWalletPluginError.web3authRequired();\n    if (web3auth.provider && web3auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    // Not connected yet to openlogin\n    if (web3auth.provider) {\n      this.provider = web3auth.provider;\n      this.userInfo = (await web3auth.getUserInfo()) as UserInfo;\n    }\n    this.web3auth = web3auth;\n    this.subscribeToWeb3AuthNoModalEvents(web3auth);\n    const connectedChainConfig = web3auth.coreOptions.chainConfig as CustomChainConfig;\n    const network = {\n      ...web3auth.coreOptions.chainConfig,\n      networkName: connectedChainConfig.displayName,\n      host: connectedChainConfig.rpcTarget,\n      chainId: parseInt(connectedChainConfig.chainId, 16),\n    };\n    await this.torusWalletInstance.init({\n      ...(this.walletInitOptions || {}),\n      network,\n      showTorusButton: false,\n    });\n    this.isInitialized = true;\n  }\n\n  async initWithProvider(provider: SafeEventEmitterProvider, userInfo: UserInfo): Promise<void> {\n    if (this.isInitialized) return;\n\n    if (!userInfo) throw TorusWalletPluginError.userInfoRequired();\n    if (!provider) throw TorusWalletPluginError.providerRequired();\n\n    this.provider = provider;\n    this.userInfo = userInfo;\n    await this.torusWalletInstance.init(this.walletInitOptions || {});\n    this.isInitialized = true;\n  }\n\n  async connect(): Promise<void> {\n    // if web3auth is being used and connected to unsupported adapter throw error\n    if (this.web3auth && this.web3auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    if (!this.isInitialized) throw TorusWalletPluginError.notInitialized();\n    // Not connected yet to openlogin\n    if (!this.provider) {\n      if (this.web3auth?.provider) {\n        this.provider = this.web3auth.provider;\n        this.userInfo = (await this.web3auth.getUserInfo()) as UserInfo;\n      } else if (this.web3auth) {\n        throw TorusWalletPluginError.web3AuthNotConnected();\n      } else {\n        throw TorusWalletPluginError.providerRequired();\n      }\n    }\n    let privateKey: string | undefined;\n    try {\n      // it should throw if provider doesn't support `eth_private_key` function\n      privateKey = (await this.provider.request<string>({ method: \"eth_private_key\" })) as string;\n    } catch (error: unknown) {\n      log.warn(\"unsupported method\", error, TorusWalletPluginError.unsupportedAdapter());\n      if ((error as EthereumRpcError<unknown>)?.code === -32004) throw TorusWalletPluginError.unsupportedAdapter();\n      throw error;\n    }\n    if (!privateKey) throw TorusWalletPluginError.web3AuthNotConnected();\n    try {\n      await this.torusWalletInstance.loginWithPrivateKey({\n        privateKey,\n        userInfo: {\n          ...(this.userInfo as Omit<UserInfo, \"isNewUser\">),\n          typeOfLogin: this.userInfo?.typeOfLogin as LOGIN_TYPE, // openlogin's login type is subset of torus embed, so it is safe to cast.\n        },\n      });\n      this.torusWalletInstance.showTorusButton();\n      this.subscribeToProviderEvents(this.provider);\n      this.subscribeToWalletEvents();\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn) throw TorusWalletPluginError.web3AuthNotConnected();\n    await this.torusWalletInstance.showWalletConnectScanner();\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn) throw TorusWalletPluginError.web3AuthNotConnected();\n    await this.torusWalletInstance.initiateTopup(provider, params);\n  }\n\n  async disconnect(): Promise<void> {\n    // if web3auth is being used and connected to unsupported adapter throw error\n    if (this.web3auth?.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    if (this.torusWalletInstance.isLoggedIn) {\n      await this.torusWalletInstance.logout();\n    } else {\n      throw new Error(\"Torus Wallet plugin is not connected\");\n    }\n  }\n\n  private subscribeToWalletEvents() {\n    this.torusWalletInstance?.provider.on(\"accountsChanged\", (accounts = []) => {\n      if ((accounts as string[]).length === 0) {\n        this.torusWalletInstance.hideTorusButton();\n        if (this.web3auth?.status === ADAPTER_STATUS.CONNECTED) this.web3auth?.logout();\n      }\n    });\n  }\n\n  private subscribeToProviderEvents(provider: SafeEventEmitterProvider) {\n    provider.on(\"accountsChanged\", (data: { accounts: string[] } = { accounts: [] }) => {\n      this.setSelectedAddress(data.accounts[0]);\n    });\n\n    provider.on(\"chainChanged\", (data: { chainId: string }) => {\n      this.setChainID(parseInt(data.chainId, 16));\n    });\n    provider.on(\"disconnect\", () => {\n      this.torusWalletInstance.hideTorusButton();\n    });\n    provider.on(\"connect\", () => {\n      this.torusWalletInstance.showTorusButton();\n    });\n  }\n\n  private subscribeToWeb3AuthNoModalEvents(web3Auth: Web3AuthNoModal) {\n    web3Auth.on(ADAPTER_EVENTS.CONNECTED, async () => {\n      if (web3Auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) {\n        log.warn(`${web3Auth.connectedAdapterName} is not compatible with torus wallet connector plugin`);\n        return;\n      }\n      this.provider = web3Auth.provider;\n      this.userInfo = (await web3Auth.getUserInfo()) as Omit<UserInfo, \"isNewUser\">;\n      if (!this.provider) throw TorusWalletPluginError.web3AuthNotConnected();\n      this.subscribeToProviderEvents(this.provider);\n    });\n\n    web3Auth.on(ADAPTER_EVENTS.DISCONNECTED, async () => {\n      this.provider = null;\n      this.userInfo = null;\n      if (this.torusWalletInstance.isLoggedIn) {\n        await this.torusWalletInstance.logout();\n      }\n      this.torusWalletInstance.hideTorusButton();\n    });\n  }\n\n  private async sessionConfig(): Promise<{ chainId: number; accounts: string[]; privateKey: string; chainConfig: CustomChainConfig }> {\n    if (!this.provider) throw TorusWalletPluginError.web3AuthNotConnected();\n    const [accounts, chainId, privateKey, chainConfig] = await Promise.all([\n      this.provider.request<string[]>({ method: \"eth_accounts\" }),\n      this.provider.request<string>({ method: \"eth_chainId\" }),\n      this.provider.request<string>({ method: \"eth_private_key\" }),\n      this.provider.request<CustomChainConfig>({ method: \"eth_provider_config\" }),\n    ]);\n    return {\n      chainId: parseInt(chainId as string, 16),\n      accounts: accounts as string[],\n      privateKey: privateKey as string,\n      chainConfig: chainConfig as CustomChainConfig,\n    };\n  }\n\n  private async setSelectedAddress(address: string): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn || !this.userInfo) throw TorusWalletPluginError.web3AuthNotConnected();\n    const sessionConfig = await this.sessionConfig();\n    if (address !== sessionConfig.accounts?.[0]) {\n      await this.torusWalletInstance.loginWithPrivateKey({\n        privateKey: sessionConfig.privateKey,\n        userInfo: {\n          ...this.userInfo,\n          typeOfLogin: this.userInfo?.typeOfLogin as LOGIN_TYPE, // openlogin's login type is subset of torus embed, so it is safe to cast.\n        },\n      });\n    }\n  }\n\n  private async setChainID(chainId: number): Promise<void> {\n    const sessionConfig = await this.sessionConfig();\n    const { chainConfig } = sessionConfig || {};\n    if (chainId !== sessionConfig.chainId && chainConfig) {\n      await this.torusWalletInstance.setProvider({\n        ...chainConfig,\n        chainId,\n        host: chainConfig.rpcTarget,\n        networkName: chainConfig.displayName,\n      });\n    }\n  }\n}\n","export * from \"./plugin\";\n"],"names":["Web3AuthError","TorusWalletPluginError","constructor","code","message","Object","defineProperty","value","fromCode","extraMessage","arguments","length","undefined","messages","notInitialized","unsupportedAdapter","providerRequired","web3authRequired","web3AuthNotConnected","userInfoRequired","alreadyInitialized","torusWalletNotSet","_defineProperty","TorusEmbed","ADAPTER_EVENTS","ADAPTER_STATUS","WALLET_ADAPTERS","PLUGIN_NAMESPACES","log","TorusWalletConnectorPlugin","options","OPENLOGIN","EIP155","torusWalletOpts","walletInitOptions","whiteLabel","Error","logoDark","logoLight","torusWalletInstance","proxyProvider","isLoggedIn","provider","initWithWeb3Auth","web3auth","isInitialized","connectedAdapterName","userInfo","getUserInfo","subscribeToWeb3AuthNoModalEvents","connectedChainConfig","coreOptions","chainConfig","network","_objectSpread","networkName","displayName","host","rpcTarget","chainId","parseInt","init","showTorusButton","initWithProvider","connect","_this$web3auth","privateKey","request","method","error","warn","_this$userInfo","loginWithPrivateKey","typeOfLogin","subscribeToProviderEvents","subscribeToWalletEvents","showWalletConnectScanner","initiateTopup","params","disconnect","_this$web3auth2","logout","_this$torusWalletInst","_this","on","accounts","_this$web3auth3","_this$web3auth4","hideTorusButton","status","CONNECTED","_this2","data","setSelectedAddress","setChainID","web3Auth","DISCONNECTED","sessionConfig","Promise","all","address","_sessionConfig$accoun","_this$userInfo2","setProvider"],"sourceRoot":""}